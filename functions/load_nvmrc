#!/usr/bin/env zsh

function load_nvmrc() {
  local RED='\033[0;31m'
  local YELLOW='\033[0;33m'
  local BLUE='\033[0;34m'
  local RESET='\033[0m'

  print_versions() {
    echo "${BLUE}Now using node $(node -v) (pnpm $(pnpm -v) and npm $(npm -v))${RESET}"
  }

  fail() {
    echo "${RED}$1${RESET}"
    return 1
  }

  info() {
    echo "${YELLOW}$1${RESET}"
  }

  local nvmrc_path="$(nvm_find_nvmrc)"

  if [ -n "$nvmrc_path" ]; then
    local nvmrc_node_version=$(cat "${nvmrc_path}")
    local nvmrc_installed_node_version=$(nvm version "$nvmrc_node_version")

    if [ "$nvmrc_installed_node_version" = "N/A" ]; then
      info "Installing node $nvmrc_node_version from .nvmrc"
      nvm deactivate --silent
      response=$(mktemp)
      nvm install -b &> $response
      if [[ "$(cat $response)" == *"Binary download failed"* ]]; then
        fail "Failed to install node $nvmrc_node_version (binary) from .nvmrc. Try running \`nvm install $nvmrc_node_version\`"
      else
        load_pnpm
        print_versions
      fi
    elif [ "$nvmrc_installed_node_version" != "$(nvm version)" ]; then
      info "Loading node $nvmrc_installed_node_version from .nvmrc"
      nvm deactivate --silent
      nvm use &> /dev/null
      load_pnpm
      print_versions
    fi
  elif [ -n "$(PWD=$OLDPWD nvm_find_nvmrc)" ] && [ "$(nvm version)" != "$(nvm version default)" ]; then
    info "Reverting to nvm default version"
    nvm deactivate --silent
    response=$(mktemp)
    nvm use default &> $response
    if [[ "$(cat $response)" != *"is not yet installed"* ]]; then
      load_pnpm
      print_versions
    else
      nvm alias default node &> /dev/null
      echo "${RED}Failed to load default node version. Try running \`nvm install --lts --default\`${RESET}"
    fi
  fi
}
